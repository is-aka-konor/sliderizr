{"version":3,"file":"ng-sliderizr.js","sources":["ng://ng-sliderizr/lib/core/panel/active-panel.ts","ng://ng-sliderizr/lib/core/panel/panel.service.ts","ng://ng-sliderizr/lib/panels/base-panel.ts","ng://ng-sliderizr/lib/core/window-ref/window-ref.service.ts","ng://ng-sliderizr/lib/panel-host/panel-host.component.ts","ng://ng-sliderizr/lib/child-panel-host/child-panel-host.directive.ts","ng://ng-sliderizr/lib/core/animations/panel-route.animation.ts","ng://ng-sliderizr/lib/panels/panel/panel.component.ts","ng://ng-sliderizr/lib/panels/anonymous-panel/anonymous-panel.component.ts","ng://ng-sliderizr/lib/panels/panel-heading/panel-heading.directive.ts","ng://ng-sliderizr/lib/core/template-host/template-host.directive.ts","ng://ng-sliderizr/lib/core/core.module.ts","ng://ng-sliderizr/lib/panels/header-template/header-template.directive.ts","ng://ng-sliderizr/lib/panels/close-content/close-content.directive.ts","ng://ng-sliderizr/lib/sliderizr.module.ts"],"sourcesContent":["import { Injectable, ComponentRef } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SzActivePanel<T> {\r\n    public componentRef: ComponentRef<T>;\r\n    private _afterClosed: Subject<any> = new Subject();\r\n    beforeClose: () => Promise<any>;\r\n\r\n    public get componentInstance(): T {\r\n        return this.componentRef ? this.componentRef.instance : null;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public close(result?: any) {\r\n        if (this.beforeClose) {\r\n             this.beforeClose().then(() => {\r\n                this.internalClose();\r\n             });\r\n             return;\r\n        }\r\n\r\n        this.internalClose(result);\r\n    }\r\n\r\n    private internalClose(result?: any) {\r\n        this.componentRef.destroy();\r\n        this._afterClosed.next(result);\r\n        this._afterClosed.complete();\r\n    }\r\n\r\n    public get afterClosed(): Observable<any> {\r\n        return this._afterClosed.asObservable();\r\n    }\r\n}\r\n","import { SzPanelComponent } from '../../panels/panel/panel.component';\r\nimport { ComponentType } from '../generic-component-type';\r\nimport { Subject } from 'rxjs';\r\nimport { SzActivePanel } from './active-panel';\r\nimport {\r\n    Injectable,\r\n    ComponentFactoryResolver,\r\n    Injector,\r\n    ReflectiveInjector\r\n} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SzPanelService {\r\n    constructor(\r\n        private _componentFactoryResolver: ComponentFactoryResolver,\r\n        private _injector: Injector\r\n    ) {\r\n    }\r\n\r\n    open<T>(content: ComponentType<T>, host: SzPanelComponent, injector?: Injector): SzActivePanel<T> {\r\n        const afterClosed = new Subject();\r\n        const activePanel = new SzActivePanel<T>();\r\n        injector = injector ? injector : this._injector;\r\n\r\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory<T>(content);\r\n        const modalContentInjector = ReflectiveInjector.resolveAndCreate([{ provide: SzActivePanel, useValue: activePanel }], injector);\r\n\r\n        const viewContainerRef = host.childPanelHost.viewContainerRef;\r\n        viewContainerRef.clear();\r\n        const componentRef = viewContainerRef.createComponent<T>(componentFactory, null, modalContentInjector);\r\n\r\n        activePanel.componentRef = componentRef;\r\n\r\n        return activePanel;\r\n    }\r\n}\r\n","import { ElementRef, HostListener, TemplateRef, HostBinding, Input, Injector } from '@angular/core';\r\nimport { SzPanelHostComponent } from './../panel-host/panel-host.component';\r\n\r\nexport abstract class BasePanel {\r\n    public headingRef: TemplateRef<any>;\r\n    public closeContentRef: TemplateRef<any>;\r\n    public headerTemplate: TemplateRef<any>;\r\n    @HostBinding('@panelRouteAnimation') routeAnimation = true;\r\n    @HostBinding('class.active') public isActive = false;\r\n    @HostBinding('class.sz-panel') public readonly hostClass = true;\r\n\r\n    @Input() heading: string;\r\n    @Input() closeText = 'close';\r\n\r\n    protected _canClose: boolean;\r\n\r\n    public get canClose(): boolean {\r\n        return this._canClose;\r\n    }\r\n\r\n    protected get nativeElement(): HTMLElement {\r\n        return this._element.nativeElement;\r\n    }\r\n\r\n    constructor (\r\n        protected _parent: SzPanelHostComponent,\r\n        protected _element: ElementRef,\r\n        protected _injector: Injector\r\n    ) {\r\n\r\n    }\r\n\r\n    abstract close(): void;\r\n\r\n    @HostListener('click', ['$event'])\r\n    public onPanelClick(args: Event) {\r\n        if (this.isElementChild(<HTMLElement>args.target)) {\r\n            this._parent.setActivePanel(this);\r\n            this.scrollVisible();\r\n        }\r\n    }\r\n\r\n    private isElementChild(target: HTMLElement): boolean {\r\n        while (target && target.tagName !== 'SZ-PANEL') {\r\n            target = target.parentElement;\r\n        }\r\n\r\n        return target && target === this._element.nativeElement;\r\n    }\r\n\r\n    @HostListener('@panelRouteAnimation.done')\r\n    public onAnimationComplete() {\r\n        // Set scroll in a timeout otherwise the DOM isnt ready and the scroll doesnt work\r\n        setTimeout(() => {\r\n            this.scrollVisible();\r\n        }, 0);\r\n    }\r\n\r\n    public scrollVisible() {\r\n        this._parent.scrollLeft = this.getScrollAmount();\r\n    }\r\n\r\n\r\n    private getOffsetLeft(): number {\r\n        const box = this.nativeElement.getBoundingClientRect();\r\n        return (box.left - this._parent.boundingBox.left) + this._parent.scrollLeft;\r\n    }\r\n\r\n    private getScrollAmount(): number {\r\n        const scrollLeft = this._parent.scrollLeft;\r\n        const parentWidth = this._parent.outerWidth;\r\n        const panelWidth = this.nativeElement.offsetWidth;\r\n\r\n        // Calculate offset left from previous sibling as the current element may be in the wrong position due to animations\r\n        const offsetLeft = this.getOffsetLeft(); // The distance from the edge of the panel host to the start of the panel\r\n        const visibleRight = offsetLeft + panelWidth; // The right most edge of the panel relative to the parent panel\r\n\r\n        let scroll: number = scrollLeft;\r\n\r\n        if (scrollLeft > offsetLeft) {\r\n            scroll = offsetLeft;\r\n        } else if (scrollLeft < (visibleRight - parentWidth)) {\r\n            // Add an extra 50px on the end so the panel isn't butted up against the side of the browser\r\n            scroll = visibleRight - parentWidth + 50;\r\n        }\r\n\r\n        return scroll;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class WindowRefService {\r\n    private _scrollTimeoutId: number;\r\n\r\n    public get nativeWindow(): Window {\r\n        return window;\r\n    }\r\n\r\n    public scrollTo(element: HTMLElement, to: number, duration: number) {\r\n        if (this._scrollTimeoutId) {\r\n            window.clearTimeout(this._scrollTimeoutId);\r\n            this._scrollTimeoutId = null;\r\n        }\r\n\r\n        if (duration <= 0) {\r\n            return;\r\n        }\r\n        const difference = to - element.scrollLeft;\r\n        const perTick = difference / duration * 10;\r\n\r\n        this._scrollTimeoutId = window.setTimeout(() => {\r\n            this._scrollTimeoutId = null;\r\n            element.scrollLeft = element.scrollLeft + perTick;\r\n            if (element.scrollLeft === to) {\r\n                return;\r\n            }\r\n\r\n            this.scrollTo(element, to, duration - 10);\r\n        }, 10);\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\r\nimport { WindowRefService } from '../core/window-ref/window-ref.service';\r\nimport { BasePanel } from '../panels/base-panel';\r\n\r\n@Component({\r\n    selector: 'sz-panel-host',\r\n    templateUrl: './panel-host.component.html',\r\n    styleUrls: ['./panel-host.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SzPanelHostComponent {\r\n    private _activePanel: BasePanel;\r\n\r\n    constructor (\r\n        private element: ElementRef,\r\n        private _cdr: ChangeDetectorRef,\r\n        private _windowRef: WindowRefService\r\n    ) { }\r\n\r\n    public get boundingBox(): ClientRect {\r\n        return this.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    private get nativeElement(): HTMLElement {\r\n        return this.element.nativeElement;\r\n    }\r\n\r\n    public get outerWidth(): number {\r\n        return this.nativeElement.offsetWidth;\r\n    }\r\n\r\n    public get scrollLeft(): number {\r\n        return this.nativeElement.scrollLeft;\r\n    }\r\n\r\n    public set scrollLeft(value: number) {\r\n        this._windowRef.scrollTo(this.nativeElement, value, 200);\r\n    }\r\n\r\n    public setActivePanel(panel: BasePanel, hasPriority = false) {\r\n        if (hasPriority) {\r\n            this._windowRef.nativeWindow.setTimeout(() => {\r\n                this.setActivePanel(panel);\r\n                this._cdr.markForCheck();\r\n            });\r\n        } else {\r\n            if (this._activePanel) {\r\n                this._activePanel.isActive = false;\r\n            }\r\n\r\n            this._activePanel = panel;\r\n            this._activePanel.isActive = true;\r\n        }\r\n    }\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[szChildPanelHost]'\r\n})\r\nexport class ChildPanelHostDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n    animate,\r\n    AnimationTriggerMetadata,\r\n    query,\r\n    style,\r\n    transition,\r\n    trigger\r\n} from '@angular/animations';\r\n\r\nexport const PANEL_ROUTE_ANIMATION: AnimationTriggerMetadata = trigger('panelRouteAnimation',\r\n    [\r\n        transition(':enter', [\r\n            style({ transform: 'translateX(-100%)', zIndex: -1 }),\r\n            animate('200ms', style({ transform: 'translateX(0%)', zIndex: -1 }))\r\n        ])\r\n    ]);\r\n\r\n    export const PANEL_EXIT_ANIMATION: AnimationTriggerMetadata = trigger('panelExitAnimation', [\r\n        transition(`:leave`, [\r\n            query('sz-panel', [\r\n                style({ transform: 'translateX(0)', zIndex: -1 }),\r\n                animate('200ms', style({ transform: 'translateX(-100%)', zIndex: -1 }))\r\n            ]),\r\n        ])\r\n    ]);\r\n","import { BasePanel } from '../base-panel';\r\nimport { SzPanelHostComponent } from './../../panel-host/panel-host.component';\r\nimport { ChildPanelHostDirective } from './../../child-panel-host/child-panel-host.directive';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Injector,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { PANEL_ROUTE_ANIMATION } from '../../core/animations/panel-route.animation';\r\nimport { SzActivePanel } from '../../core/panel/active-panel';\r\nimport { SzPanelService } from '../../core/panel/panel.service';\r\nimport { ComponentType } from '../../core/generic-component-type';\r\n\r\n@Component({\r\n    selector: 'sz-panel',\r\n    templateUrl: './panel.component.html',\r\n    styleUrls: ['./panel.component.scss'],\r\n    animations: [\r\n        PANEL_ROUTE_ANIMATION\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SzPanelComponent extends BasePanel implements OnInit, OnDestroy {\r\n    private _activeAnon: SzActivePanel<any>;\r\n    private _destroyed$: Subject<any> = new Subject<any>();\r\n    @ViewChild(ChildPanelHostDirective, { static: true }) childPanelHost: ChildPanelHostDirective;\r\n    @ViewChild(RouterOutlet, { static: true }) private _childOutlet: RouterOutlet;\r\n    @Output() afterChildClosed = new EventEmitter<any>();\r\n    @Output() afterChildOpened = new EventEmitter<any>();\r\n\r\n    public get childComponent(): Object {\r\n        return this._childOutlet.component;\r\n    }\r\n\r\n    constructor (\r\n        @Optional() parent: SzPanelHostComponent,\r\n        private _panelService: SzPanelService,\r\n        injector: Injector,\r\n        element: ElementRef,\r\n        private _route: ActivatedRoute,\r\n        private _router: Router\r\n    ) {\r\n        super(parent, element, injector);\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this._canClose = this._route.root !== this._route.parent;\r\n\r\n        this._route.params.pipe(\r\n                takeUntil(this._destroyed$)\r\n            )\r\n            .subscribe(() => {\r\n                this._parent.setActivePanel(this, true);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Open an anonymous panel\r\n     * @param content The component representing the anon panel\r\n     */\r\n    public openChild<T>(content: ComponentType<T>): SzActivePanel<T> {\r\n        if (this._childOutlet.isActivated) {\r\n            this.closeChildRoute();\r\n        }\r\n\r\n        this._activeAnon = this._panelService.open<T>(content, this, this._injector);\r\n\r\n        this._activeAnon.afterClosed\r\n            .subscribe(() => {\r\n                this._parent.setActivePanel(this);\r\n                this._activeAnon = null;\r\n            });\r\n\r\n        this._parent.setActivePanel(this._activeAnon.componentInstance);\r\n\r\n        return this._activeAnon;\r\n    }\r\n\r\n    /**\r\n     * Close the panel\r\n     * This routes to the parent panel\r\n     */\r\n    public close() {\r\n        this._router.navigate(['./'], { relativeTo: this._route.parent });\r\n    }\r\n\r\n    /**\r\n     * Closes all child panels\r\n     * Essentially this routes to the current panel\r\n     */\r\n    public closeChildRoute() {\r\n        this._router.navigate(['./'], { relativeTo: this._route });\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this._destroyed$.next();\r\n    }\r\n\r\n    /**\r\n     * Event handler for when the router outlet deactivates\r\n     * @param component The component that was deactivated\r\n     */\r\n    public onChildDeactivate(component: any) {\r\n        this._parent.setActivePanel(this);\r\n        this.afterChildClosed.emit(component);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when the router outlet activates\r\n     * @param component The component that the outlet was activated with\r\n     */\r\n    public onChildActivate(component: any) {\r\n        this.afterChildOpened.emit(component);\r\n        if (this._activeAnon) {\r\n            this._activeAnon.close();\r\n        }\r\n    }\r\n}\r\n","import { SzPanelHostComponent } from './../../panel-host/panel-host.component';\r\nimport { Component, Injector, ElementRef, Optional, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { BasePanel } from '../base-panel';\r\nimport { PANEL_ROUTE_ANIMATION } from '../../core/animations/panel-route.animation';\r\nimport { SzActivePanel } from '../../core/panel/active-panel';\r\n\r\n@Component({\r\n    selector: 'sz-anonymous-panel',\r\n    templateUrl: 'anonymous-panel.component.html',\r\n    styleUrls: ['../panel/panel.component.scss'],\r\n    animations: [PANEL_ROUTE_ANIMATION],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SzAnonymousPanelComponent extends BasePanel implements OnInit {\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        element: ElementRef,\r\n        @Optional() parent: SzPanelHostComponent,\r\n        @Optional() private _pi: SzActivePanel<any>\r\n    ) {\r\n            super(parent, element, injector);\r\n        this._canClose = true;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this._parent.setActivePanel(this, true);\r\n    }\r\n\r\n    public close(): void {\r\n        this._pi.close();\r\n    }\r\n}\r\n","import { SzAnonymousPanelComponent } from '../anonymous-panel/anonymous-panel.component';\r\nimport { SzPanelComponent } from '../panel/panel.component';\r\nimport { Directive, TemplateRef, Optional } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[szHeading]'\r\n})\r\nexport class SzPanelHeadingDirective {\r\n    public templateRef: TemplateRef<any>;\r\n\r\n    public constructor(\r\n        templateRef: TemplateRef<any>,\r\n        @Optional() panel: SzPanelComponent,\r\n        @Optional() anonPanel: SzAnonymousPanelComponent\r\n    ) {\r\n        (anonPanel || panel).headingRef = templateRef;\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    Input,\r\n    TemplateRef,\r\n    ViewContainerRef\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[szTemplateHost]'\r\n})\r\nexport class TemplateHostDirective {\r\n    public viewRef: ViewContainerRef;\r\n\r\n    protected _viewRef: ViewContainerRef;\r\n    protected _szTemplateHost: TemplateRef<any>;\r\n\r\n    @Input()\r\n    public set szTemplateHost(templateRef: TemplateRef<any>) {\r\n        this._szTemplateHost = templateRef;\r\n        if (templateRef) {\r\n            this.viewRef.createEmbeddedView(templateRef);\r\n        }\r\n    }\r\n\r\n    public get szTemplateHost(): TemplateRef<any> {\r\n        return this._szTemplateHost;\r\n    }\r\n\r\n    public constructor(viewRef: ViewContainerRef) {\r\n        this.viewRef = viewRef;\r\n    }\r\n}\r\n","import { WindowRefService } from './window-ref/window-ref.service';\r\nimport { SzPanelService } from './panel/panel.service';\r\nimport { TemplateHostDirective } from './template-host/template-host.directive';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        TemplateHostDirective\r\n    ],\r\n    exports: [\r\n        TemplateHostDirective\r\n    ],\r\n    providers: [\r\n        SzPanelService,\r\n        WindowRefService\r\n    ]\r\n})\r\nexport class CoreModule { }\r\n","import { SzAnonymousPanelComponent } from '../anonymous-panel/anonymous-panel.component';\r\nimport { SzPanelComponent } from '../panel/panel.component';\r\nimport { Directive, TemplateRef, Optional } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[szHeaderTemplate]'\r\n})\r\nexport class SzHeaderTemplateDirective {\r\n    public templateRef: TemplateRef<any>;\r\n\r\n    public constructor(\r\n        templateRef: TemplateRef<any>,\r\n        @Optional() panel: SzPanelComponent,\r\n        @Optional() anonPanel: SzAnonymousPanelComponent\r\n    ) {\r\n        (anonPanel || panel).headerTemplate = templateRef;\r\n    }\r\n}\r\n","import { SzAnonymousPanelComponent } from '../anonymous-panel/anonymous-panel.component';\r\nimport { SzPanelComponent } from '../panel/panel.component';\r\nimport { Directive, TemplateRef, Optional } from '@angular/core';\r\n\r\n/** Should be used to mark <template> element as a template for tab heading */\r\n@Directive({\r\n    selector: '[szCloseContent]'\r\n})\r\nexport class SzCloseContentDirective {\r\n    public templateRef: TemplateRef<any>;\r\n\r\n    public constructor(\r\n        templateRef: TemplateRef<any>,\r\n        @Optional() panel: SzPanelComponent,\r\n        @Optional() anonPanel: SzAnonymousPanelComponent\r\n    ) {\r\n        (panel || anonPanel).closeContentRef = templateRef;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SzPanelHeadingDirective } from './panels/panel-heading/panel-heading.directive';\r\nimport { SzPanelComponent } from './panels/panel/panel.component';\r\nimport { SzAnonymousPanelComponent } from './panels/anonymous-panel/anonymous-panel.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { SzPanelHostComponent } from './panel-host/panel-host.component';\r\nimport { ChildPanelHostDirective } from './child-panel-host/child-panel-host.directive';\r\nimport { SzHeaderTemplateDirective } from './panels/header-template/header-template.directive';\r\nimport { SzCloseContentDirective } from './panels/close-content/close-content.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SzPanelComponent,\r\n        SzPanelHeadingDirective,\r\n        SzPanelHostComponent,\r\n        ChildPanelHostDirective,\r\n        SzAnonymousPanelComponent,\r\n        SzCloseContentDirective,\r\n        SzHeaderTemplateDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        CoreModule\r\n    ],\r\n    exports: [\r\n        SzPanelComponent,\r\n        SzPanelHeadingDirective,\r\n        SzPanelHostComponent,\r\n        SzAnonymousPanelComponent,\r\n        SzCloseContentDirective,\r\n        SzHeaderTemplateDirective\r\n    ]\r\n})\r\nexport class SliderizrModule { }\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}